@charset "utf-8";

@import "settings";
@import "utility";
@import "common";

/* login page / signup page
------------------------------------------ */
.login_img_wrap {
  background: rgba(#fff, .6);
  border-radius: 5px;
  padding: 20px;
  img {
    width: calc(50% - 10px);
  }
}
.login_form,
.signup_form {
  margin-top: 50px;
  dl {
    display: flex;
    flex-wrap: wrap;
    gap: 20px;
    max-width: 500px;
    margin: 0 auto;
    text-align: left;
    dt {
      width: calc(100% - 320px);
    }
    dd {
      width: 300px;
    }
  }
}

/* play page
------------------------------------------ */
.display {
  background: rgba(#fff, .6);
  border-radius: 20px;
  box-shadow: rgb(0 0 0 / 4%) 0px 2px 10px;
  padding: 30px;
  margin-bottom: 20px;
  min-height: 280px;
  @include flex_center;
  p {
    display: table;
    margin-right: auto;
    margin-left: auto;
    text-align: left;
    line-height: 1.3;
    font-feature-settings: "palt";
    word-break: break-all;
  }
}
.display_inner {
  flex-grow: 1;
  align-self: stretch;
  position: relative;
}
#display_ja {
  @include fontsize(38);
  letter-spacing: .02em;
  margin-top: .5em;
}
#display_abc {
  @include fontsize(32);
  letter-spacing: .05em;
}
#typed {
  @include fontsize(28);
  color: #f60;
}
#display_meter {
  width: 100%;
  height: 3px;
  background: #ddd;
  position: relative;
  position: absolute;
  bottom: 0;
  right: 0;
  &::before {
    content: "";
    display: block;
    width: 100%;
    height: 100%;
    background: #aaa;
    position: absolute;
    bottom: 0;
    right: 0;
  }
  @for $i from 1 through $max_play_count {
    &.len_#{$max_play_count - $i} {
      &::before {
        width: calc(100% - (100%/$max_play_count * $i));
      }
    }
  }
}

.keyboard {
  background: rgba(102, 204, 204, 0.6);
  border-radius: 5px;
  box-shadow: rgb(0 0 0 / 4%) 0px 2px 10px;
  padding: 15px;
  .row {
    @include flex_center;
    gap: 6px;
    &:not(:last-child) {
      margin-bottom: 6px;
    }
    &.row1 .key {
      transform: translateX(-30px);
    }
    &.row3 .key {
      transform: translateX(30px);
    }
    &.row4 .key {
      transform: translateX(-10px);
    }
  }
  .key {
    @include fontsize(16);
    letter-spacing: .1em;
    color: #333;
    @include flex_center;
    width: 50px;
    height: 40px;
    background: #e5ffff;
    border-radius: 3px;
    box-shadow: rgb(0 0 0 / 4%) 0px 2px 10px;
    &.key_shift {
      width: 80px;
    }
    &.key_space {
      width: 200px
    }
    &.key_correct {
      background: #ffcc99;
    }
    &.key_wrong {
      background: rgb(243, 104, 104);
    }
  }
}

.retry {
  display: none;
  position: relative;
  &::before {
    content: "R";
    display: inline-block;
    color: #666;
    @include fontsize(10);
    letter-spacing: 0;
    background: rgba(#fff, .9);
    padding: 2px 5px;
    border-radius: 3px;
    position: absolute;
    top: 0;
    right: 0;
    transform: translate(0%, -50%);
    transition: .2s;
    opacity: 0;
  }
  &:hover {
    &::before {
      opacity: 1;
    }
  }
}

/* register page
------------------------------------------ */
.lists {
  list-style: none;
  background: rgba(#fff, .6);
  border-radius: 20px;
  box-shadow: rgb(0 0 0 / 4%) 0px 2px 15px;
  padding: 30px;
}
.list {
  border-bottom: 1px solid #ccc;
  display: flex;
  align-items: center;
  gap: 5px;
  padding-bottom: .3em;
  &:not(:last-child) {
    margin-bottom: .4em;
  }
}
.list_check {
  cursor: pointer;
  &:checked {
    + .list_text {
      text-decoration: line-through;
      color: #bbb;
    }
  }
}
.list_text {
  flex-grow: 1;
}
.delete {
  cursor: pointer;
  color: #bbb;
  @include fontsize(24);
  line-height: 1;
  display: inline-block;
  padding: 5px;
  margin-right: 4px;
  transition: .2s;
  &:hover {
    color: #666;
  }
}